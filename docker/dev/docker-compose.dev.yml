# Development Docker Compose
version: '3.8'

services:
  school-website:
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile.dev
    container_name: school-website-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://school_user:dev_password@postgres:5432/school_db_dev
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=dev-secret-key
      - NEXTAUTH_URL=http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - dev-network
    depends_on:
      - postgres
      - redis
    command: npm run dev

  postgres:
    image: postgres:15-alpine
    container_name: school-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=school_db_dev
      - POSTGRES_USER=school_user
      - POSTGRES_PASSWORD=dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - dev-network

  redis:
    image: redis:7-alpine
    container_name: school-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
    networks:
      - dev-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: school-pgadmin-dev
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@localhost
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    volumes:
      - pgadmin-dev-data:/var/lib/pgadmin
    networks:
      - dev-network
    depends_on:
      - postgres

volumes:
  postgres-dev-data:
  redis-dev-data:
  pgadmin-dev-data:

networks:
  dev-network:
    driver: bridge
