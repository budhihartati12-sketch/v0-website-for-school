# Staging Docker Compose
version: '3.8'

services:
  school-website:
    build:
      context: ../../
      dockerfile: docker/Dockerfile
    container_name: school-website-staging
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=showcase.konxc.space
      - VIRTUAL_PATH=/websekolah-staging
      - LETSENCRYPT_HOST=showcase.konxc.space
      - LETSENCRYPT_EMAIL=${EMAIL}
      - NODE_ENV=staging
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=https://${DOMAIN}
    networks:
      - nginx-net
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  postgres:
    image: postgres:15-alpine
    container_name: school-postgres-staging
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-staging-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - nginx-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  redis:
    image: redis:7-alpine
    container_name: school-redis-staging
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-staging-data:/data
    networks:
      - nginx-net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
        reservations:
          memory: 64M
          cpus: '0.05'

  monitoring:
    image: prom/prometheus:latest
    container_name: school-prometheus-staging
    restart: unless-stopped
    volumes:
      - ./prometheus-staging.yml:/etc/prometheus/prometheus.yml
      - prometheus-staging-data:/prometheus
    networks:
      - nginx-net
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'

volumes:
  postgres-staging-data:
  redis-staging-data:
  prometheus-staging-data:

networks:
  nginx-net:
    external: true
